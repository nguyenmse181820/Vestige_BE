spring:
  application:
    name: Vestige_BE
  task:
    scheduling:
      enabled: true
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: false

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Asia/Ho_Chi_Minh
    date-format: yyyy-MM-dd HH:mm:ss

  # CORS Configuration
  web:
    cors:
      allowed-origins:
        - "http://localhost:3000"
        - "http://localhost:5173"
        - "http://localhost:4000"
        - "http://127.0.0.1:3000"
        - "http://127.0.0.1:5173"
        - "http://127.0.0.1:4000"
      allowed-methods: "*"
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info
      cors:
        allowed-origins: "http://localhost:3000,http://localhost:5173,http://localhost:4000"
        allowed-methods: "GET,POST"

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000}

server:
  port: ${PORT:8080}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:4000,http://127.0.0.1:3000,http://127.0.0.1:5173}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,PATCH,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max-age: ${CORS_MAX_AGE:3600}

# Swagger OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    display-request-duration: true
  paths-to-match: /api/**
  show-actuator: false
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# Logging Configuration
logging:
  level:
    org.springframework.web.socket: DEBUG
    com.fasterxml.jackson: INFO

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/vestige
    username: postgres
    password: ${DATABASE_PASSWORD:12345}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  web:
    cors:
      allowed-origins:
        - "http://localhost:3000"
        - "http://localhost:5173"
        - "http://localhost:4000"
        - "http://127.0.0.1:3000"
        - "http://127.0.0.1:5173"

logging:
  level:
    com.boeing.bookingservice: DEBUG
    org.springframework.web: DEBUG

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/vestige
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:vestigedb}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
  web:
    cors:
      allowed-origins:
        - "http://localhost:3000"
        - "http://localhost:5173"
        - "http://localhost:4000"
        - "http://127.0.0.1:3000"
        - "http://127.0.0.1:5173"
        - "http://host.docker.internal:3000"
        - "http://host.docker.internal:5173"

logging:
  level:
    com.boeing.bookingservice: INFO

---
# AWS Profile (for AWS RDS)
spring:
  config:
    activate:
      on-profile: aws
  datasource:
    url: jdbc:postgresql://vestige.c1koqow427at.ap-southeast-1.rds.amazonaws.com:5432/postgres
    username: postgres
    password: vestigedb
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
  web:
    cors:
      allowed-origins:
        - "http://localhost:3000"
        - "http://localhost:5173"
        - "http://localhost:4000"
        - "http://127.0.0.1:3000"
        - "http://127.0.0.1:5173"

logging:
  level:
    com.boeing.bookingservice: INFO